{"version":3,"file":"static/js/186.d156d39a.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,8BACzBA,IAAAA,SAAAA,QAAAA,KAAAA,gBAA8C,kCAE9C,IAAMC,EAAM,mCAENC,EAAQ,mCAAG,oGACQF,IAAAA,IAAA,uCAA0CC,IADlD,cACTE,EADS,yBAGRA,EAASC,MAHD,2CAAH,qDAMRC,EAAY,mCAAG,WAAMC,GAAN,uFACIN,IAAAA,IAAA,kBACVM,EADU,oBACIL,EADJ,oBADJ,cACbE,EADa,yBAIZA,EAASC,MAJG,2CAAH,sDAOZG,EAAe,mCAAG,WAAMD,GAAN,uFACCN,IAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,2BADD,cAChBE,EADgB,yBAIfA,EAASC,MAJM,2CAAH,sDAOfI,EAAgB,mCAAG,WAAMC,GAAN,uFACAT,IAAAA,IAAA,kCACMC,EADN,kBACmBQ,IAFnB,cACjBN,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBM,EAAa,mCAAG,WAAMJ,GAAN,uFACGN,IAAAA,IAAA,mBAAsBM,EAAtB,4BAA4CL,IAD/C,cACdE,EADc,yBAEbA,EAASC,MAFI,2CAAH,uD,sHCgBnB,UA5CgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,mBAGiCV,EAAAA,EAAAA,IAAgBI,GAHjD,OAGUQ,EAHV,OAIIJ,EAAWI,EAAeC,SAJ9B,gDAMIC,QAAQC,IAAR,MANJ,yBAQIL,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdM,KACC,CAACZ,KAGF,+BACGK,IACC,SAAC,KAAD,CACEQ,MAAM,MACNC,iBAAiB,OACjBC,kBAAkB,MAClBC,iBAAiB,SAGpBb,EAAQc,OAAS,EAChBd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACV,4BACE,qCAAaD,MACb,uBAAIC,MAFID,OAMZ","sources":["API/API.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.headers.post['Content-Type'] = 'application/json; charset=utf-8';\n\nconst KEY = '96dea35b5a4d6ccb61b77721fd102ef9';\n\nconst GetFilms = async () => {\n  const response = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n\n  return response.data;\n};\n\nconst getMovieById = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nconst getMoviesCast = async id => {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${KEY}`);\n  return response.data;\n};\n\nexport {\n  GetFilms,\n  getMovieById,\n  getMoviesByQuery,\n  getMovieReviews,\n  getMoviesCast,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { getMovieReviews } from 'API';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchFilm() {\n      setLoading(true);\n      try {\n        const getFilmReviews = await getMovieReviews(movieId);\n        setReviews(getFilmReviews.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchFilm();\n  }, [movieId]);\n\n  return (\n    <section>\n      {loading && (\n        <ThreeCircles\n          color=\"red\"\n          outerCircleColor=\"blue\"\n          middleCircleColor=\"red\"\n          innerCircleColor=\"grey\"\n        />\n      )}\n      {reviews.length > 0 ? (\n        reviews.map(({ author, content }) => (\n          <div key={author}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </div>\n        ))\n      ) : (\n        <p> No Reviews found =(</p>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","KEY","GetFilms","response","data","getMovieById","id","getMovieReviews","getMoviesByQuery","query","getMoviesCast","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","getFilmReviews","results","console","log","fetchFilm","color","outerCircleColor","middleCircleColor","innerCircleColor","length","map","author","content"],"sourceRoot":""}